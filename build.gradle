plugins {
    id 'java-library'
    id 'maven-publish'
    id 'idea'
    id 'net.neoforged.moddev' version '2.0.82'
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

neoForge {
    version = project.neo_version

    parchment {
        mappingsVersion = project.parchment_mappings_version
        minecraftVersion = project.parchment_minecraft_version
    }
    runs {
        client {
            client()
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }

        server {
            server()
            programArgument '--nogui'
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }
        gameTestServer {
            type = "gameTestServer"
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }

        data {
            data()
            programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }

        configureEach {
            systemProperty 'forge.logging.markers', 'REGISTRIES'
            logLevel = org.slf4j.event.Level.DEBUG
        }
    }

    mods {
        "${mod_id}" {
            sourceSet(sourceSets.main)
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
    maven { url 'https://maven.azuredoom.com/mods' }
    maven {
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url = "https://jitpack.io" }
    maven {
        name = "SmartBrainLib (SBL) Maven Repo"
        url = "https://dl.cloudsmith.io/public/tslat/sbl/maven/"
    }
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://maven.enginehub.org/repo/" }
    maven { url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/" }
    maven { url = "https://maven.theillusivec4.top" }
    maven { url = "https://maven.kosmx.dev/" }
    maven { url = "https://maven.jt-dev.tech/releases" }
    maven { url = "https://maven.jt-dev.tech/snapshots" }
}

dependencies {

    // Azurelib
    implementation "mod.azure.azurelib:azurelib-neo-${minecraft_version}:${azurelib_version}"

    // JEI
    compileOnly("mezz.jei:jei-${minecraft_version}-neoforge-api:${jei_version}")
    runtimeOnly("mezz.jei:jei-${minecraft_version}-neoforge:${jei_version}")

    runtimeOnly "curse.maven:jade-324717:5884231"

    // Caelus
    runtimeOnly "com.illusivesoulworks.caelus:caelus-neoforge:${caelus_version}"
    compileOnly "com.illusivesoulworks.caelus:caelus-neoforge:${caelus_version}:api"

    // Curios
    compileOnly "top.theillusivec4.curios:curios-neoforge:${curios_version}:api"
    runtimeOnly "top.theillusivec4.curios:curios-neoforge:${curios_version}"

    // Better Combat
    runtimeOnly "maven.modrinth:better-combat:2.0.2+1.21.1-neoforge"
    runtimeOnly "curse.maven:cloth-config-348521:5623420"
    runtimeOnly "curse.maven:playeranimator-658587:5698755"

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

}

var generateModMetadata = tasks.register("generateModMetadata", ProcessResources) {
    var replaceProperties = [minecraft_version      : minecraft_version,
                             minecraft_version_range: minecraft_version_range,
                             neo_version            : neo_version,
                             neo_version_range      : neo_version_range,
                             loader_version_range   : loader_version_range,
                             mod_id                 : mod_id,
                             mod_name               : mod_name,
                             mod_license            : mod_license,
                             mod_version            : mod_version,
                             mod_authors            : mod_authors,
                             mod_description        : mod_description]
    inputs.properties replaceProperties
    expand replaceProperties
    from "src/main/templates"
    into "build/generated/sources/modMetadata"
}
sourceSets.main.resources.srcDir generateModMetadata
neoForge.ideSyncTask generateModMetadata

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
